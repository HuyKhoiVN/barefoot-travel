@{
    ViewData["Title"] = "Home";
    Layout = "_UserLayout";
}

@section Styles {
    <link rel="stylesheet" href="~/ui-user-template/sections-theme.css?v=1.4">
    <link rel="stylesheet" href="~/ui-user-template/advanced-animations.css?v=1.4">
    <!-- Globe 3D Styles -->
    <link href="~/ui-user-template/globe-hero.css?v=1.2" rel="stylesheet">
    <style>
        /* Horizontal scrollable tour grid styles */
        .tour-grid-container {
            position: relative;
            overflow: hidden;
        }

        .tour-grid-wrapper {
            display: flex;
            overflow-x: auto;
            overflow-y: hidden;
            scroll-behavior: smooth;
            -webkit-overflow-scrolling: touch;
            scrollbar-width: thin;
            scrollbar-color: rgba(0, 0, 0, 0.2) transparent;
            padding-bottom: 10px;
            gap: 20px;
        }

        .tour-grid-wrapper::-webkit-scrollbar {
            height: 6px;
        }

        .tour-grid-wrapper::-webkit-scrollbar-track {
            background: transparent;
        }

        .tour-grid-wrapper::-webkit-scrollbar-thumb {
            background-color: rgba(0, 0, 0, 0.2);
            border-radius: 3px;
        }

        .tour-grid-wrapper .product-card {
            flex: 0 0 auto;
            min-width: 280px;
            max-width: 280px;
        }

        .scroll-arrow-btn {
            position: absolute;
            top: 50%;
            transform: translateY(-50%);
            background: rgba(255, 255, 255, 0.95);
            border: none;
            border-radius: 50%;
            width: 44px;
            height: 44px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
            transition: all 0.3s ease;
            z-index: 10;
        }

        .scroll-arrow-btn:hover {
            background: #fff;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
            transform: translateY(-50%) scale(1.1);
        }

        .scroll-arrow-btn.prev {
            left: -10px;
        }

        .scroll-arrow-btn.next {
            right: -10px;
        }

        .scroll-arrow-btn:disabled {
            opacity: 0.3;
            cursor: not-allowed;
        }

        .scroll-arrow-btn i {
            font-size: 18px;
            color: #333;
        }

        /* Hide arrows when not needed */
        .tour-grid-container:not(:hover) .scroll-arrow-btn {
            opacity: 0.6;
        }

        @@media (max-width: 768px) {
            .tour-grid-wrapper .product-card {
                min-width: 250px;
                max-width: 250px;
            }

            .scroll-arrow-btn {
                width: 36px;
                height: 36px;
            }

            .scroll-arrow-btn.prev {
                left: -5px;
            }

            .scroll-arrow-btn.next {
                right: -5px;
            }
        }
    </style>
}

    <!-- Hero Section with 3D Globe -->
    <section class="hero-globe-section">
        <!-- Globe Container -->
        <div class="globe-container">
            <div id="globe-canvas"></div>
        </div>
        
        <!-- Loading State -->
        <div class="globe-loading">
            <div class="spinner"></div>
            <p>Loading 3D Globe...</p>
        </div>
        
        <!-- Hero Content Overlay -->
        <div class="hero-globe-content">
            <div class="hero-globe-text">
                    <!-- Feature Badges -->
                    <div class="globe-feature-badges">
                        <div class="globe-badge">
                            <i class="fas fa-map-marked-alt"></i>
                            <span>250+ Tours</span>
                        </div>
                        <div class="globe-badge">
                            <i class="fas fa-shield-alt"></i>
                            <span>Trusted & Safe</span>
                        </div>
                        <div class="globe-badge">
                            <i class="fas fa-headset"></i>
                            <span>24/7 Support</span>
                        </div>
                    </div>
                    
                    <!-- Main Heading -->
                    <h1>
                        Explore Vietnam's<br>
                        <span class="highlight">Most Beautiful Destinations</span>
                    </h1>
                    
                    <!-- Description -->
                    <p>
                        Discover breathtaking boat trips across Vietnam. 
                        From Ha Long Bay to Mekong Delta, we connect you 
                        to the most stunning waterways in Southeast Asia.
                    </p>
                    
                    <!-- CTA Buttons with Expandable Search -->
                    <div class="globe-cta-wrapper">
                        <div class="globe-search-container" id="globeSearchContainer">
                            <button class="globe-btn globe-btn-primary" id="searchToggleBtn">
                                <i class="fas fa-search"></i>
                                <span>Find Your Tour</span>
                            </button>
                            <div class="search-input-wrapper" id="searchInputWrapper">
                                <input type="text" id="globeSearchInput" placeholder="Where do you want to go?" />
                                <button class="search-submit-btn">
                                    <i class="fas fa-arrow-right"></i>
                                </button>
                            </div>
                        </div>
                        <button class="globe-btn globe-btn-secondary" id="exploreTourBtn">
                            <i class="fas fa-compass"></i>
                            <span>Explore Tours</span>
                        </button>
                    </div>
                    
                    <!-- Cities Info Panel -->
                    <div class="cities-info-panel">
                        <div class="city-info-card hanoi" onclick="focusGlobeCity('hanoi')">
                            <h3>
                                <span class="city-icon"></span>
                                Hà Nội
                            </h3>
                            <div class="city-stats">
                                <div class="city-stat">
                                    <span class="city-stat-label">Tours</span>
                                    <span class="city-stat-value">85+</span>
                                </div>
                            </div>
                        </div>
                        
                        <div class="city-info-card danang" onclick="focusGlobeCity('da nang')">
                            <h3>
                                <span class="city-icon"></span>
                                Đà Nẵng
                            </h3>
                            <div class="city-stats">
                                <div class="city-stat">
                                    <span class="city-stat-label">Tours</span>
                                    <span class="city-stat-value">62+</span>
                                </div>
                            </div>
                        </div>
                        
                        <div class="city-info-card hcmc" onclick="focusGlobeCity('ho chi minh city')">
                            <h3>
                                <span class="city-icon"></span>
                                TP.HCM
                            </h3>
                            <div class="city-stats">
                                <div class="city-stat">
                                    <span class="city-stat-label">Tours</span>
                                    <span class="city-stat-value">103+</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
    </section>

    <!-- About Compass Section -->
    <section class="about-compass animate-on-scroll responsive-padding">
        <div class="bare-container">
            <div class="section-header">
                <h2 class="responsive-text-lg">About Barefoot Atlas Travel</h2>
                <a href="#" class="browse-all">
                    <i class="fas fa-arrow-right"></i>
                    <span>Learn more</span>
                </a>
            </div>
            <div class="divider"></div>
            <div class="about-compass-grid">
                <div class="about-left">
                    <div class="spotlight-badge">LOCAL EXPERTS</div>
                    <h3 class="responsive-text-lg">10+ Years Crafting Journeys</h3>
                    <p>With over a decade of experience, we design meaningful Vietnam trips that blend culture,
                        landscapes, and authentic local encounters. Our team of passionate travel experts ensures every
                        detail is taken care of for a seamless experience.</p>
                    <ul class="about-highlights">
                        <li><i class="fas fa-check"></i> Tailor-made itineraries</li>
                        <li><i class="fas fa-check"></i> Trusted local partners</li>
                        <li><i class="fas fa-check"></i> 24/7 customer support</li>
                    </ul>
                    <button class="book-now-btn">Get in touch</button>
                </div>
                <div class="about-right">
                    <div class="about-visual">
                        <div class="about-bg"></div>
                        <div class="about-overlay"></div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Contact Us Section -->
    <section class="contact-us animate-on-scroll responsive-padding">
        <div class="bare-container">
            <div class="section-header">
                <h2 class="responsive-text-lg">Contact Us</h2>
                <a href="#" class="browse-all">
                    <i class="fas fa-arrow-right"></i>
                    <span>Get support</span>
                </a>
            </div>
            <div class="divider"></div>
            <div class="contact-us-grid">
                <div class="contact-us-card">
                    <i class="fas fa-map-marker-alt"></i>
                    <h4>Head Office</h4>
                    <p>123 Nguyen Hue Street, District 1<br>Ho Chi Minh City, Vietnam</p>
                </div>
                <div class="contact-us-card">
                    <i class="fas fa-phone"></i>
                    <h4>Phone</h4>
                    <p>+84 28 3822 8888<br>+84 901 234 567</p>
                </div>
                <div class="contact-us-card">
                    <i class="fas fa-envelope"></i>
                    <h4>Email</h4>
                    <p>info@compasstravel.vn<br>booking@compasstravel.vn</p>
                </div>
                <div class="contact-us-card">
                    <i class="fas fa-clock"></i>
                    <h4>Working Hours</h4>
                    <p>Mon - Fri: 8:00 AM - 6:00 PM<br>Sat - Sun: 8:00 AM - 5:00 PM</p>
                </div>
            </div>
        </div>
    </section>

    <!-- Featured Tours Section (Will be populated by JSON) -->
    <section id="featuredToursSection" class="featured-tours responsive-padding">
        <div class="bare-container">
            <div id="tourCards" class="tour-cards">
                <!-- Tour cards will be dynamically generated from JSON -->
            </div>

            <div class="indicators-grid m-3">
                <div class="indicator-item">
                    <i class="fas fa-star"></i>
                    <span>563+ Customer reviews 5/10</span>
                </div>
                <div class="indicator-item">
                    <i class="fab fa-whatsapp"></i>
                    <span>Easy Whatsapp & Messenger support</span>
                </div>
                <div class="indicator-item">
                    <i class="fas fa-ticket-alt"></i>
                    <span>Free Tailor-made Trips</span>
                </div>
            </div>
        </div>
    </section>

    <!-- Ways to Travel Section -->
    <section class="ways-to-travel bg-white responsive-padding">
        <div class="bare-container">
            <h2 class="responsive-text-lg">Ways to travel</h2>
            <div id="travelGrid" class="travel-grid">
                <!-- Categories will be loaded here dynamically -->
            </div>

            <!-- Daily Tours Grid -->
            <div id="dailyTourGrid" class="daily-tours-grid mt-5">
                <!-- Daily tours will be loaded here -->
            </div>
        </div>
    </section>

    <!-- Homepage Sections Container -->
    <div id="homepageSectionsContainer">
        <!-- Sections will be dynamically loaded here based on homepage config -->
    </div>

@section Scripts {
    <script src="~/ui-user-template/script.js"></script>
    <script src="~/ui-user-template/modern-effects.js?v=1.3"></script>
    
    <script>
        $(document).ready(function() {
            initCurrencySelector();
            loadFeaturedTours();
            loadDailyTours();
            loadHomepageData();
            loadWaysToTravel();
        });

        // Load all homepage data from API
        function loadHomepageData() {
            $.ajax({
                url: '/api/HomePage/sections',
                type: 'GET',
                success: function(response) {
                    console.log('Response received:', response);
                    if (response.success && response.data) {
                        // response.data is already the array of sections
                        renderHomepageSections(response.data);
                    }
                },
                error: function(xhr) {
                    console.error('Error loading homepage sections from API:', xhr);
                }
            });
        }

        // Load Featured Tours
        function loadFeaturedTours() {
            $.ajax({
                url: '/api/FeaturedDailyTours/featured-tours',
                type: 'GET',
                success: function(response) {
                    console.log('Featured Tours response:', response);
                    if (response.success && response.data) {
                        renderFeaturedTours(response.data.tours);
                    }
                },
                error: function(xhr) {
                    console.error('Error loading Featured Tours:', xhr);
                }
            });
        }

        // Load Daily Tours
        function loadDailyTours() {
            $.ajax({
                url: '/api/FeaturedDailyTours/daily-tours',
                type: 'GET',
                success: function(response) {
                    console.log('Daily Tours response:', response);
                    if (response.success && response.data) {
                        renderDailyTours(response.data.tours);
                    }
                },
                error: function(xhr) {
                    console.error('Error loading Daily Tours:', xhr);
                }
            });
        }

        // Load Ways to Travel section
        function loadWaysToTravel() {
            $.ajax({
                url: '/api/HomePage/ways-to-travel',
                type: 'GET',
                success: function(response) {
                    console.log('Ways to Travel response:', response);
                    if (response.success && response.data) {
                        renderWaysToTravelSection(response.data.categories);
                    }
                },
                error: function(xhr) {
                    console.error('Error loading Ways to Travel:', xhr);
                }
            });
        }

        // Render featured tours (2 spotlight cards)
        function renderFeaturedTours(tours) {
            const container = $('#tourCards');
            container.empty();
            
            if (!tours || tours.length === 0) {
                return;
            }
            
            tours.forEach(function(tour) {
                const cardClass = tour.cardClass || '';
                const cardHtml = `
                    <div class="tour-card ${cardClass}">
                        <div class="card-background" style="background-image: url('${tour.imageUrl}');"></div>
                        <div class="card-overlay"></div>
                        <div class="card-content">
                            <div class="card-category">${tour.badge}</div>
                            <h3>${tour.categoryName}</h3>
                            <p>${tour.description}</p>
                            <button class="book-btn">BOOK NOW</button>
                        </div>
                    </div>
                `;
                container.append(cardHtml);
            });
        }

        // Render all homepage sections
        function renderHomepageSections(sections) {
            const container = $('#homepageSectionsContainer');
            container.empty();

            if (!sections || sections.length === 0) {
                return;
            }

            // Filter spotlight sections and assign positions based on display order
            const spotlightSections = [];
            sections.forEach(function(section) {
                if (section.layoutStyle === 'spotlight' && section.isActive) {
                    spotlightSections.push(section);
                }
            });

            // Sort spotlight sections by displayOrder to determine actual position
            spotlightSections.sort(function(a, b) {
                return a.displayOrder - b.displayOrder;
            });

            // Assign spotlight positions based on sorted index
            spotlightSections.forEach(function(section, index) {
                section.spotlightPosition = index;
            });

            // Sort all sections by displayOrder before rendering
            const sortedSections = sections.slice().sort(function(a, b) {
                return a.displayOrder - b.displayOrder;
            });

            // Render all sections
            sortedSections.forEach(function(section) {
                if (!section.isActive) return;

                const sectionHtml = renderSection(section);
                container.append(sectionHtml);
            });

            // Initialize scroll functionality after rendering
            setTimeout(function() {
                initTourGridScroll();
            }, 100);
        }

        // Detect layout style to determine appropriate CSS classes
        function getLayoutClasses(layoutStyle, maxItems) {
            const classes = {
                section: '',
                grid: ''
            };

            switch(layoutStyle) {
                case 'spotlight':
                    classes.section = 'left-spotlight-section';
                    classes.grid = 'left-spotlight-grid';
                    break;
                case 'grid':
                    // Always use no-spotlight-section for grid layout (not spotlight)
                    classes.section = 'no-spotlight-section';
                    classes.grid = 'no-spotlight-grid';
                    break;
                case 'grid-2':
                    classes.section = 'no-spotlight-section';
                    classes.grid = 'no-spotlight-grid';
                    break;
                case 'grid-3':
                    classes.section = 'right-spotlight-section';
                    classes.grid = 'right-spotlight-grid';
                    break;
                default:
                    classes.section = 'right-spotlight-section';
                    classes.grid = 'right-spotlight-grid';
            }

            return classes;
        }

        // Render a single section based on layout style
        function renderSection(section) {
            // Special handling for "Ways to Travel" section
            if (section.homepageTitle === "Ways to Travel") {
                return renderWaysToTravelSection(section);
            }
            
            const layoutClasses = getLayoutClasses(section.layoutStyle, section.maxItems);
            
            // Special handling for spotlight sections with left/right layout
            if (section.layoutStyle === 'spotlight') {
                return renderLeftSpotlightLayout(section, layoutClasses);
            }
            
            // Special handling for grid-3 (right-spotlight layout)
            if (section.layoutStyle === 'grid-3') {
                return renderRightSpotlightLayout(section, layoutClasses);
            }
            
            let html = `<section class="${layoutClasses.section} responsive-padding ${section.customClass || ''}">`;
            html += `<div class="bare-container">`;
            
            // Section header
            html += `<div class="section-header">`;
            html += `<h2 class="responsive-text-lg">${section.homepageTitle}</h2>`;
            html += `<a href="#" class="browse-all">
                        <i class="fas fa-arrow-right"></i>
                        <span>Browse all tours</span>
                     </a>`;
            html += `</div>`;
            html += `<div class="divider"></div>`;

            // Section content based on layout
            const columns = section.layoutStyle === 'grid-2' ? 2 : 4;
            html += renderGridLayout(section, columns, layoutClasses.grid);

            html += `</div></section>`;
            return html;
        }

        // Render "Ways to Travel" section
        function renderWaysToTravelSection(categories) {
            const container = $('#travelGrid');
            if (!container.length) return;

            container.empty();

            if (!categories || categories.length === 0) {
                return;
            }

            // Sort by display order
            const sortedCategories = categories.sort((a, b) => a.displayOrder - b.displayOrder);

            sortedCategories.forEach(function(category) {
                const imageUrl = category.imageUrl1 || '/ui-user-template/images/home_background.jpg';
                const tourCount = category.totalTours || 0;
                
                container.append(`
                    <div class="travel-item" data-category-id="${category.categoryId}" style="cursor: pointer;">
                        <div class="travel-image">
                            <img src="${imageUrl}" alt="${category.categoryName}">
                        </div>
                        <div class="travel-content">
                            <h4>${category.categoryName}</h4>
                            <span>${tourCount}+ tours</span>
                        </div>
                    </div>
                `);
            });

            // Add click handlers to navigate to category page
            $('.travel-item').on('click', function() {
                const categoryId = $(this).data('category-id');
                window.location.href = `/tours/${categoryId}`;
            });

            // Load daily tours data
            loadDailyTours();
        }

        // Render Daily Tours
        function renderDailyTours(tours) {
            const container = $('#dailyTourGrid');
            if (!container.length) return;

            container.empty();

            if (!tours || tours.length === 0) {
                return;
            }

            tours.forEach(function(tour) {
                const cardClass = tour.cardClass || '';
                
                const card = $(`
                    <div class="daily-tour-card ${cardClass}" data-category-id="${tour.categoryId}" style="cursor: pointer;">
                        <div class="daily-card-background" style="background-image: url('${tour.imageUrl}');"></div>
                        <div class="daily-card-overlay"></div>
                        <div class="daily-card-content">
                            <div class="daily-card-category">${tour.badge}</div>
                            <h3>${tour.categoryName}</h3>
                            <p>${tour.description}</p>
                            <button class="view-tours-btn">VIEW ALL TOURS</button>
                        </div>
                    </div>
                `);
                
                // Add click handler
                card.on('click', function(e) {
                    e.preventDefault();
                    const categoryId = $(this).data('category-id');
                    window.location.href = `/tours/${categoryId}`;
                });
                
                container.append(card);
            });
        }

        // Render spotlight layout (3 large cards) with horizontal scrolling
        function renderSpotlightLayout(section, gridClass) {
            gridClass = gridClass || 'left-spotlight-grid';
            const uniqueId = 'spotlight-' + section.id + '-' + Math.random().toString(36).substr(2, 9);
            const tours = (section.selectedTours || []).slice(0, section.maxItems);
            
            let html = `<div class="tour-grid-container" data-grid-id="${uniqueId}">`;
            html += `<button class="scroll-arrow-btn prev" data-direction="prev" style="display: none;">
                        <i class="fas fa-chevron-left"></i>
                     </button>`;
            html += `<div class="tour-grid-wrapper" data-wrapper-id="${uniqueId}">`;
            
            tours.forEach(function(tour) {
                const imageUrl = tour.images && tour.images[0] ? tour.images[0] : '/ui-user-template/images/home_background.jpg';
                const galleryImageUrl = tour.images && tour.images[1] ? tour.images[1] : imageUrl;
                const price = formatPrice(tour.pricePerPerson);
                
                html += `
                    <div class="product-card">
                        <div class="product-image-wrapper">
                            <img src="${imageUrl}" alt="${tour.title}" class="main-image">
                            <img src="${galleryImageUrl}" alt="Gallery Image" class="gallery-image">
                            <div class="wishlist-btn">
                                <i class="fas fa-heart"></i>
                            </div>
                        </div>
                        <div class="product-content">
                            <p class="product-categories">
                                <a href="#">${section.categoryName}</a>
                            </p>
                            <h3 class="product-title">
                                <a href="#">${tour.title}</a>
                            </h3>
                            <div class="product-price">
                                <span class="amount">${price}</span>
                            </div>
                            <a href="#" class="read-more-btn">Read more</a>
                        </div>
                    </div>
                `;
            });
            
            html += '</div>';
            html += `<button class="scroll-arrow-btn next" data-direction="next" style="display: none;">
                        <i class="fas fa-chevron-right"></i>
                     </button>`;
            html += '</div>';
            return html;
        }

                 // Render right spotlight layout (tours left, content right)
        function renderRightSpotlightLayout(section, layoutClasses) {
            let html = `<section class="${layoutClasses.section} responsive-padding ${section.customClass || ''}">`;
            html += `<div class="bare-container">`;
            html += `<div class="right-spotlight-content">`;
            
            // Left side: tours with header
            html += `<div class="right-spotlight-left">`;
            html += `<div class="section-header">`;
            html += `<h2 class="responsive-text-lg">${section.homepageTitle}</h2>`;
            html += `<a href="#" class="browse-all">
                        <i class="fas fa-arrow-right"></i>
                        <span>Browse all tours</span>
                     </a>`;
            html += `</div>`;
            html += `<div class="divider"></div>`;
            
            // Render grid WITHOUT horizontal scroll wrapper for right-spotlight
            html += renderRightSpotlightGrid(section, layoutClasses.grid);
            
            html += `</div>`;
            
            // Right side: content with badge
            html += `<div class="right-spotlight-right">`;
            html += `<div class="right-spotlight-background" style="background-image: url('${section.spotlightImageUrl || '/ui-user-template/images/home_background.jpg'}');"></div>`;
            html += '<div class="right-spotlight-overlay"></div>';
            html += '<div class="right-spotlight-card-content">';
            if (section.badgeText) {
                html += `<div class="spotlight-badge">${section.badgeText}</div>`;
            }
            html += `<h1 class="responsive-text-xl">TOP LIST</h1>`;
            html += `<p>Discover our expertly crafted top tours, honed by years of experience. Don't miss out on these unforgettable experiences!</p>`;
            html += `<button class="book-now-btn">BOOK NOW</button>`;
            html += '</div>';
            html += `</div>`;
            
            html += `</div>`;
            html += `</div>`;
            html += `</section>`;
            return html;
        }

        // Render right spotlight grid without scroll container (for grid-3 layout)
        function renderRightSpotlightGrid(section, gridClass) {
            gridClass = gridClass || 'right-spotlight-grid';
            const tours = (section.selectedTours || []).slice(0, section.maxItems);
            
            let html = `<div class="${gridClass}">`;
            
            tours.forEach(function(tour) {
                const imageUrl = tour.images && tour.images[0] ? tour.images[0] : '/ui-user-template/images/home_background.jpg';
                const galleryImageUrl = tour.images && tour.images[1] ? tour.images[1] : imageUrl;
                const price = formatPrice(tour.pricePerPerson);
                const categoryName = section.primaryCategoryName || (section.categoryNames && section.categoryNames[0]) || '';
                
                html += `
                    <div class="product-card">
                        <div class="product-image-wrapper">
                            <img src="${imageUrl}" alt="${tour.title}" class="main-image">
                            <img src="${galleryImageUrl}" alt="Gallery Image" class="gallery-image">
                            <div class="wishlist-btn">
                                <i class="fas fa-heart"></i>
                            </div>
                        </div>
                        <div class="product-content">
                            <p class="product-categories">
                                <a href="#">${categoryName}</a>
                            </p>
                            <h3 class="product-title">
                                <a href="#">${tour.title}</a>
                            </h3>
                            <div class="product-price">
                                <span class="amount">${price}</span>
                            </div>
                            <a href="#" class="read-more-btn">Read more</a>
                        </div>
                    </div>
                `;
            });
            
            html += '</div>';
            return html;
        }

        // Render left/right spotlight layout based on position
        function renderLeftSpotlightLayout(section, layoutClasses) {
            const spotlightPosition = section.spotlightPosition || 0;
            const isLeftPosition = spotlightPosition % 2 === 0;
            
            let html = `<section class="left-spotlight-section responsive-padding ${section.customClass || ''}">`;
            html += `<div class="bare-container">`;
            html += `<div class="left-spotlight-content">`;
            
            // Left section (content on left, tours on right) - for even positions
            if (isLeftPosition) {
                html += `<div class="left-spotlight-left">`;
                html += `<div class="spotlight-card-background" style="background-image: url('${section.spotlightImageUrl || '/ui-user-template/images/home_background.jpg'}');"></div>`;
                html += '<div class="spotlight-card-overlay"></div>';
                html += '<div class="spotlight-card-content">';
                if (section.badgeText) {
                    html += `<div class="spotlight-badge">${section.badgeText}</div>`;
                }
                html += `<h1 class="responsive-text-xl">${section.homepageTitle || 'BEST CHOICE'}</h1>`;
                html += `<p>Arrange your border crossings stress-free by handling everything at once!</p>`;
                html += `<button class="book-now-btn">BOOK NOW</button>`;
                html += '</div>';
                html += `</div>`;
                html += `<div class="left-spotlight-right">`;
                html += `<div class="section-header">`;
                html += `<h2 class="responsive-text-lg">${section.homepageTitle}</h2>`;
                html += `<a href="#" class="browse-all">
                            <i class="fas fa-arrow-right"></i>
                            <span>Browse all tours</span>
                         </a>`;
                html += `</div>`;
                html += `<div class="divider"></div>`;
                html += renderSpotlightLayout(section, layoutClasses.grid);
                html += `</div>`;
            } else {
                // Right section (tours on left, content on right) - for odd positions
                html += `<div class="left-spotlight-right">`;
                html += `<div class="section-header">`;
                html += `<h2 class="responsive-text-lg">${section.homepageTitle}</h2>`;
                html += `<a href="#" class="browse-all">
                            <i class="fas fa-arrow-right"></i>
                            <span>Browse all tours</span>
                         </a>`;
                html += `</div>`;
                html += `<div class="divider"></div>`;
                html += renderSpotlightLayout(section, layoutClasses.grid);
                html += `</div>`;
                html += `<div class="left-spotlight-left">`;
                html += `<div class="spotlight-card-background" style="background-image: url('${section.spotlightImageUrl || '/ui-user-template/images/home_background.jpg'}');"></div>`;
                html += '<div class="spotlight-card-overlay"></div>';
                html += '<div class="spotlight-card-content">';
                if (section.badgeText) {
                    html += `<div class="spotlight-badge">${section.badgeText}</div>`;
                }
                html += `<h1 class="responsive-text-xl">${section.homepageTitle || 'BEST CHOICE'}</h1>`;
                html += `<p>Arrange your border crossings stress-free by handling everything at once!</p>`;
                html += `<button class="book-now-btn">BOOK NOW</button>`;
                html += '</div>';
                html += `</div>`;
            }
            
            html += `</div>`;
            html += `</div>`;
            html += `</section>`;
            return html;
        }

        // Render grid layout with horizontal scrolling
        function renderGridLayout(section, columns, gridClass) {
            gridClass = gridClass || 'no-spotlight-grid';
            const uniqueId = 'grid-' + section.id + '-' + Math.random().toString(36).substr(2, 9);
            const tours = (section.selectedTours || []).slice(0, section.maxItems);
            
            let html = `<div class="tour-grid-container" data-grid-id="${uniqueId}">`;
            html += `<button class="scroll-arrow-btn prev" data-direction="prev" style="display: none;">
                        <i class="fas fa-chevron-left"></i>
                     </button>`;
            html += `<div class="tour-grid-wrapper" data-wrapper-id="${uniqueId}">`;
            
            tours.forEach(function(tour) {
                const imageUrl = tour.images && tour.images[0] ? tour.images[0] : '/ui-user-template/images/home_background.jpg';
                const galleryImageUrl = tour.images && tour.images[1] ? tour.images[1] : imageUrl;
                const price = formatPrice(tour.pricePerPerson);
                const categoryName = section.primaryCategoryName || (section.categoryNames && section.categoryNames[0]) || '';
                
                html += `
                    <div class="product-card">
                        <div class="product-image-wrapper">
                            <img src="${imageUrl}" alt="${tour.title}" class="main-image">
                            <img src="${galleryImageUrl}" alt="Gallery Image" class="gallery-image">
                            <div class="wishlist-btn">
                                <i class="fas fa-heart"></i>
                            </div>
                        </div>
                        <div class="product-content">
                            <p class="product-categories">
                                <a href="#">${categoryName}</a>
                            </p>
                            <h3 class="product-title">
                                <a href="#">${tour.title}</a>
                            </h3>
                            <div class="product-price">
                                <span class="amount">${price}</span>
                            </div>
                            <a href="#" class="read-more-btn">Read more</a>
                        </div>
                    </div>
                `;
            });
            
            html += '</div>';
            html += `<button class="scroll-arrow-btn next" data-direction="next" style="display: none;">
                        <i class="fas fa-chevron-right"></i>
                     </button>`;
            html += '</div>';
            return html;
        }

        // Initialize scroll functionality for tour grids
        function initTourGridScroll() {
            $('.tour-grid-container').each(function() {
                const container = $(this);
                const wrapper = container.find('.tour-grid-wrapper');
                const prevBtn = container.find('.scroll-arrow-btn.prev');
                const nextBtn = container.find('.scroll-arrow-btn.next');

                // Scroll amount (scroll by one card width + gap)
                const scrollAmount = 300;

                // Check and update button states
                function updateButtons() {
                    const scrollLeft = wrapper.scrollLeft();
                    const scrollWidth = wrapper[0].scrollWidth;
                    const clientWidth = wrapper[0].clientWidth;

                    // Show/hide buttons based on whether scrolling is needed
                    if (scrollWidth > clientWidth) {
                        // Enable/disable prev button
                        if (scrollLeft === 0) {
                            prevBtn.prop('disabled', true).hide();
                        } else {
                            prevBtn.prop('disabled', false).show();
                        }

                        // Enable/disable next button
                        if (scrollLeft >= scrollWidth - clientWidth - 10) {
                            nextBtn.prop('disabled', true).hide();
                        } else {
                            nextBtn.prop('disabled', false).show();
                        }
                    } else {
                        // No scrolling needed, hide both buttons
                        prevBtn.hide();
                        nextBtn.hide();
                    }
                }

                // Initialize button states
                updateButtons();

                // Scroll event listener
                wrapper.on('scroll', updateButtons);

                // Click handlers
                prevBtn.on('click', function() {
                    wrapper.animate({ scrollLeft: wrapper.scrollLeft() - scrollAmount }, 300);
                });

                nextBtn.on('click', function() {
                    wrapper.animate({ scrollLeft: wrapper.scrollLeft() + scrollAmount }, 300);
                });

                // Resize event listener to update button states
                $(window).on('resize', updateButtons);
            });
        }

        // Format price with commas for thousands - using CurrencyConverter
        function formatPrice(price) {
            return CurrencyConverter.formatPrice(price, true);
        }
        
        // Update all prices on page when currency changes
        function updateAllPrices() {
            loadFeaturedTours();
            loadDailyTours();
            loadHomepageData();
            loadWaysToTravel();
        }
        
        // Initialize currency selector
        function initCurrencySelector() {
            // Set initial display
            const currentCurrency = CurrencyConverter.getCurrency();
            $('#currentCurrencyDisplay').text(CurrencyConverter.getSymbol());
            
            // Add click handlers
            $('.currency-option').on('click', function(e) {
                e.preventDefault();
                const currency = $(this).data('currency');
                CurrencyConverter.setCurrency(currency);
                $('#currentCurrencyDisplay').text(CurrencyConverter.getSymbol());
                $('.currency-dropdown-menu').hide();
                updateAllPrices();
            });
            
            // Toggle dropdown
            $('#currencySelector').on('click', function(e) {
                e.stopPropagation();
                $('.currency-dropdown-menu').toggle();
            });
            
            // Close dropdown when clicking outside
            $(document).on('click', function() {
                $('.currency-dropdown-menu').hide();
            });
        }
        
        // Removed categoryNameToSlug function - no longer needed with ID-based routing
    </script>

    <!-- Globe 3D Libraries (Offline) -->
    <script src="~/ui-user-template/libs/three/three.min.js"></script>
    <script src="~/ui-user-template/libs/topojson/topojson-client.min.js"></script>
    <script src="~/ui-user-template/libs/globe-gl/globe.gl.min.js"></script>

    <!-- Globe Hero Logic -->
    <script src="~/ui-user-template/globe-hero.js?v=1.2"></script>
}
